<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.yqby.platform.mapper.FlowOrderMapper">
  <resultMap id="BaseResultMap" type="team.yqby.platform.dto.model.FlowOrder">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
    <result column="ORDER_TIME" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="FLOW_ID" jdbcType="BIGINT" property="flowId" />
    <result column="OUTTER_FLOW_ID" jdbcType="VARCHAR" property="outterFlowId" />
    <result column="PREPAY_ID" jdbcType="VARCHAR" property="prepayId" />
    <result column="ORIGINAL_COST" jdbcType="BIGINT" property="originalCost" />
    <result column="CURRENT_COST" jdbcType="BIGINT" property="currentCost" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="OPEN_ID" jdbcType="VARCHAR" property="openId" />
    <result column="TRANS_STATUS" jdbcType="VARCHAR" property="transStatus" />
    <result column="PAY_REQ_TIME" jdbcType="TIMESTAMP" property="payReqTime" />
    <result column="PAY_RESP_TIME" jdbcType="TIMESTAMP" property="payRespTime" />
    <result column="PAY_RESP_CODE" jdbcType="VARCHAR" property="payRespCode" />
    <result column="PAY_RESP_DESC" jdbcType="VARCHAR" property="payRespDesc" />
    <result column="CHECK_STATUS" jdbcType="VARCHAR" property="checkStatus" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="ARCHIVE_FLAG" jdbcType="VARCHAR" property="archiveFlag" />
  </resultMap>

  <resultMap id="QueryResultMap" type="team.yqby.platform.dto.query.FlowOrderQueryDto">
    <result column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
    <result column="ORDER_TIME" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="CURRENT_COST" jdbcType="BIGINT" property="currentCost" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="TRANS_STATUS" jdbcType="VARCHAR" property="transStatus" />
    <result column="FLOW_TITLE" jdbcType="VARCHAR" property="flowTitle" />
    <result column="FLOW_DESC" jdbcType="VARCHAR" property="flowDesc" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORDER_ID, ORDER_TIME, FLOW_ID, OUTTER_FLOW_ID, PREPAY_ID, ORIGINAL_COST, CURRENT_COST,
    PHONE, OPEN_ID, TRANS_STATUS, PAY_REQ_TIME, PAY_RESP_TIME, PAY_RESP_CODE, PAY_RESP_DESC,
    CHECK_STATUS, UPDATE_BY, UPDATE_DATE, CREATE_BY, CREATE_DATE, ARCHIVE_FLAG
  </sql>
  <select id="selectByExample" parameterType="team.yqby.platform.dto.model.FlowOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_order
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_order
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="team.yqby.platform.dto.model.FlowOrderExample">
    delete from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.yqby.platform.dto.model.FlowOrder">
    insert into t_order (ID, ORDER_ID, ORDER_TIME,
    FLOW_ID, OUTTER_FLOW_ID, PREPAY_ID,
    ORIGINAL_COST, CURRENT_COST, PHONE,
    OPEN_ID, TRANS_STATUS, PAY_REQ_TIME,
    PAY_RESP_TIME, PAY_RESP_CODE, PAY_RESP_DESC,
    CHECK_STATUS, UPDATE_BY, UPDATE_DATE,
    CREATE_BY, CREATE_DATE, ARCHIVE_FLAG
    )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP},
    #{flowId,jdbcType=BIGINT}, #{outterFlowId,jdbcType=VARCHAR}, #{prepayId,jdbcType=VARCHAR},
    #{originalCost,jdbcType=BIGINT}, #{currentCost,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR},
    #{openId,jdbcType=VARCHAR}, #{transStatus,jdbcType=VARCHAR}, #{payReqTime,jdbcType=TIMESTAMP},
    #{payRespTime,jdbcType=TIMESTAMP}, #{payRespCode,jdbcType=VARCHAR}, #{payRespDesc,jdbcType=VARCHAR},
    #{checkStatus,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},
    #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{archiveFlag,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="team.yqby.platform.dto.model.FlowOrder">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="orderTime != null">
        ORDER_TIME,
      </if>
      <if test="flowId != null">
        FLOW_ID,
      </if>
      <if test="outterFlowId != null">
        OUTTER_FLOW_ID,
      </if>
      <if test="prepayId != null">
        PREPAY_ID,
      </if>
      <if test="originalCost != null">
        ORIGINAL_COST,
      </if>
      <if test="currentCost != null">
        CURRENT_COST,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="openId != null">
        OPEN_ID,
      </if>
      <if test="transStatus != null">
        TRANS_STATUS,
      </if>
      <if test="payReqTime != null">
        PAY_REQ_TIME,
      </if>
      <if test="payRespTime != null">
        PAY_RESP_TIME,
      </if>
      <if test="payRespCode != null">
        PAY_RESP_CODE,
      </if>
      <if test="payRespDesc != null">
        PAY_RESP_DESC,
      </if>
      <if test="checkStatus != null">
        CHECK_STATUS,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="archiveFlag != null">
        ARCHIVE_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="outterFlowId != null">
        #{outterFlowId,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="originalCost != null">
        #{originalCost,jdbcType=BIGINT},
      </if>
      <if test="currentCost != null">
        #{currentCost,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="transStatus != null">
        #{transStatus,jdbcType=VARCHAR},
      </if>
      <if test="payReqTime != null">
        #{payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payRespTime != null">
        #{payRespTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payRespCode != null">
        #{payRespCode,jdbcType=VARCHAR},
      </if>
      <if test="payRespDesc != null">
        #{payRespDesc,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveFlag != null">
        #{archiveFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.yqby.platform.dto.model.FlowOrderExample" resultType="java.lang.Long">
    select count(*) from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        ORDER_TIME = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flowId != null">
        FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.outterFlowId != null">
        OUTTER_FLOW_ID = #{record.outterFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.prepayId != null">
        PREPAY_ID = #{record.prepayId,jdbcType=VARCHAR},
      </if>
      <if test="record.originalCost != null">
        ORIGINAL_COST = #{record.originalCost,jdbcType=BIGINT},
      </if>
      <if test="record.currentCost != null">
        CURRENT_COST = #{record.currentCost,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        OPEN_ID = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.transStatus != null">
        TRANS_STATUS = #{record.transStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.payReqTime != null">
        PAY_REQ_TIME = #{record.payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payRespTime != null">
        PAY_RESP_TIME = #{record.payRespTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payRespCode != null">
        PAY_RESP_CODE = #{record.payRespCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payRespDesc != null">
        PAY_RESP_DESC = #{record.payRespDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStatus != null">
        CHECK_STATUS = #{record.checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.archiveFlag != null">
        ARCHIVE_FLAG = #{record.archiveFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order
    set ID = #{record.id,jdbcType=BIGINT},
    ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
    ORDER_TIME = #{record.orderTime,jdbcType=TIMESTAMP},
    FLOW_ID = #{record.flowId,jdbcType=BIGINT},
    OUTTER_FLOW_ID = #{record.outterFlowId,jdbcType=VARCHAR},
    PREPAY_ID = #{record.prepayId,jdbcType=VARCHAR},
    ORIGINAL_COST = #{record.originalCost,jdbcType=BIGINT},
    CURRENT_COST = #{record.currentCost,jdbcType=BIGINT},
    PHONE = #{record.phone,jdbcType=VARCHAR},
    OPEN_ID = #{record.openId,jdbcType=VARCHAR},
    TRANS_STATUS = #{record.transStatus,jdbcType=VARCHAR},
    PAY_REQ_TIME = #{record.payReqTime,jdbcType=TIMESTAMP},
    PAY_RESP_TIME = #{record.payRespTime,jdbcType=TIMESTAMP},
    PAY_RESP_CODE = #{record.payRespCode,jdbcType=VARCHAR},
    PAY_RESP_DESC = #{record.payRespDesc,jdbcType=VARCHAR},
    CHECK_STATUS = #{record.checkStatus,jdbcType=VARCHAR},
    UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
    UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
    CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
    CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
    ARCHIVE_FLAG = #{record.archiveFlag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.yqby.platform.dto.model.FlowOrder">
    update t_order
    <set>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        ORDER_TIME = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowId != null">
        FLOW_ID = #{flowId,jdbcType=BIGINT},
      </if>
      <if test="outterFlowId != null">
        OUTTER_FLOW_ID = #{outterFlowId,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        PREPAY_ID = #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="originalCost != null">
        ORIGINAL_COST = #{originalCost,jdbcType=BIGINT},
      </if>
      <if test="currentCost != null">
        CURRENT_COST = #{currentCost,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        OPEN_ID = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="transStatus != null">
        TRANS_STATUS = #{transStatus,jdbcType=VARCHAR},
      </if>
      <if test="payReqTime != null">
        PAY_REQ_TIME = #{payReqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payRespTime != null">
        PAY_RESP_TIME = #{payRespTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payRespCode != null">
        PAY_RESP_CODE = #{payRespCode,jdbcType=VARCHAR},
      </if>
      <if test="payRespDesc != null">
        PAY_RESP_DESC = #{payRespDesc,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null">
        CHECK_STATUS = #{checkStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="archiveFlag != null">
        ARCHIVE_FLAG = #{archiveFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.yqby.platform.dto.model.FlowOrder">
    update t_order
    set ORDER_ID = #{orderId,jdbcType=VARCHAR},
    ORDER_TIME = #{orderTime,jdbcType=TIMESTAMP},
    FLOW_ID = #{flowId,jdbcType=BIGINT},
    OUTTER_FLOW_ID = #{outterFlowId,jdbcType=VARCHAR},
    PREPAY_ID = #{prepayId,jdbcType=VARCHAR},
    ORIGINAL_COST = #{originalCost,jdbcType=BIGINT},
    CURRENT_COST = #{currentCost,jdbcType=BIGINT},
    PHONE = #{phone,jdbcType=VARCHAR},
    OPEN_ID = #{openId,jdbcType=VARCHAR},
    TRANS_STATUS = #{transStatus,jdbcType=VARCHAR},
    PAY_REQ_TIME = #{payReqTime,jdbcType=TIMESTAMP},
    PAY_RESP_TIME = #{payRespTime,jdbcType=TIMESTAMP},
    PAY_RESP_CODE = #{payRespCode,jdbcType=VARCHAR},
    PAY_RESP_DESC = #{payRespDesc,jdbcType=VARCHAR},
    CHECK_STATUS = #{checkStatus,jdbcType=VARCHAR},
    UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
    UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
    CREATE_BY = #{createBy,jdbcType=VARCHAR},
    CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
    ARCHIVE_FLAG = #{archiveFlag,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectBy" parameterType="map" resultMap="QueryResultMap">
    select
    a.ORDER_ID, a.ORDER_TIME, a.CURRENT_COST, a.PHONE, a.TRANS_STATUS, b.FLOW_TITLE, b.FLOW_DESC
    from t_order a, t_flow_stock b
    where 1 = 1
    <if test="phone != null">
      and a.PHONE = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="openId != null">
      and a.OPEN_ID = #{openId,jdbcType=VARCHAR}
    </if>
    and a.FLOW_ID = b.FLOW_ID
    and a.TRANS_STATUS != 'WAIT_PAY'
    and a.TRANS_STATUS != 'ORDER_FAIL'
    and a.ARCHIVE_FLAG = '0'
    order by a.ORDER_TIME DESC
    limit #{startRow,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
  </select>

</mapper>